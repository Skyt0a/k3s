"argo-cd":
  # Enabled all metric scrap by prometheus
  controller:
    metrics:
      enabled: true

  # Ingress
  server:
    extraArgs: 
      - "--dex-server-plaintext"
      - "--dex-server=http://argocd-dex-server.argocd.svc.cluster.local:5556"
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      hosts:
      - argocd.k3s.bazin-jeremy.com
      tls:
      - hosts:
        - argocd.k3s.bazin-jeremy.com
        secretName: argocd-tls

  dex:
    enabled: false
    extraArgs:
      - "--disable-tls"

  oidc.config: |
    name: Github
    issuer: https://github.com
    clientID: Iv1.3dea4dba1f7b8aee
    clientSecret: 14b73cd0d3e1fdf046e4992adbf1f7bf43d7a7dc

    # Optional list of allowed aud claims. If omitted or empty, defaults to the clientID value above (and the 
    # cliClientID, if that is also specified). If you specify a list and want the clientID to be allowed, you must 
    # explicitly include it in the list.
    # Token verification will pass if any of the token's audiences matches any of the audiences in this list.
    # allowedAudiences:
    # - aaaabbbbccccddddeee
    # - qqqqwwwweeeerrrrttt

    # Optional. If false, tokens without an audience will always fail validation. If true, tokens without an audience 
    # will always pass validation.
    # Defaults to true for Argo CD < 2.6.0. Defaults to false for Argo CD >= 2.6.0.
    skipAudienceCheckWhenTokenHasNoAudience: true

    # Optional set of OIDC scopes to request. If omitted, defaults to: ["openid", "profile", "email", "groups"]
    requestedScopes: ["openid", "profile", "email", "groups"]

    # Optional set of OIDC claims to request on the ID token.
    # requestedIDTokenClaims: {"groups": {"essential": true}}

    # Some OIDC providers require a separate clientID for different callback URLs.
    # For example, if configuring Argo CD with self-hosted Dex, you will need a separate client ID
    # for the 'localhost' (CLI) client to Dex. This field is optional. If omitted, the CLI will
    # use the same clientID as the Argo CD server
    # cliClientID: vvvvwwwwxxxxyyyyzzzz

  
  configs:
    cm:
      exec.enabled: true
      url: "https://argocd.k3s.bazin-jeremy.com"
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: Iv1.3dea4dba1f7b8aee
              clientSecret: 14b73cd0d3e1fdf046e4992adbf1f7bf43d7a7dc
            useLoginAsID: true

    rbac:
      policy.default: "role:admin"
  # ArgoCD Application status detection
  resource.customizations: |
    argoproj.io/Application:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs